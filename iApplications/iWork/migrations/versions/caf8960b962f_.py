"""empty message

Revision ID: caf8960b962f
Revises: 
Create Date: 2025-02-17 08:20:33.907278

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'caf8960b962f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('input_parameters',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('label', sa.String(length=80), nullable=True),
    sa.Column('unit', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('element_type', sa.String(length=100), nullable=True),
    sa.Column('constraint', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_activity_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_beneficiary_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('beneficiary_type', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('nrega_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nrega_id')
    )
    op.create_table('plant_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('scientific_name', sa.String(length=100), nullable=True),
    sa.Column('remarks', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('nrega_districts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('nrega_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['nrega_states.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nrega_id')
    )
    op.create_table('nrega_major_heads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('major_head', sa.String(length=150), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['nrega_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['nrega_states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_blocks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('nrega_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['nrega_districts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_work_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('work_type', sa.String(length=200), nullable=False),
    sa.Column('major_head_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['major_head_id'], ['nrega_major_heads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_feedbacks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('topic', sa.String(length=100), nullable=False),
    sa.Column('feedback', sa.String(length=500), nullable=False),
    sa.Column('created_on', sa.String(length=20), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_panchayats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('nrega_id', sa.BigInteger(), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['nrega_blocks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nrega_id')
    )
    op.create_table('nrega_permissible_works',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permissible_work', sa.String(), nullable=False),
    sa.Column('work_type_id', sa.Integer(), nullable=False),
    sa.Column('major_head_id', sa.Integer(), nullable=False),
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('beneficiary_type_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['nrega_activity_types.id'], ),
    sa.ForeignKeyConstraint(['beneficiary_type_id'], ['nrega_beneficiary_types.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['nrega_categories.id'], ),
    sa.ForeignKeyConstraint(['major_head_id'], ['nrega_major_heads.id'], ),
    sa.ForeignKeyConstraint(['work_type_id'], ['nrega_work_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inputs_and_permissibles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parameter_order', sa.Integer(), nullable=True),
    sa.Column('input_parameter_id', sa.Integer(), nullable=False),
    sa.Column('permissible_work_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['input_parameter_id'], ['input_parameters.id'], ),
    sa.ForeignKeyConstraint(['permissible_work_id'], ['nrega_permissible_works.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nrega_completed_works',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('amount_sanctioned', sa.Float(), nullable=True),
    sa.Column('amount_spent', sa.Float(), nullable=True),
    sa.Column('person_days', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.String(length=100), nullable=True),
    sa.Column('end_date', sa.String(length=100), nullable=True),
    sa.Column('fin_year', sa.String(length=50), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('panchayat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['nrega_categories.id'], ),
    sa.ForeignKeyConstraint(['panchayat_id'], ['nrega_panchayats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('field_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('input_value', sa.String(length=100), nullable=True),
    sa.Column('completed_work_id', sa.Integer(), nullable=False),
    sa.Column('permissible_work_id', sa.Integer(), nullable=False),
    sa.Column('input_id', sa.Integer(), nullable=False),
    sa.Column('panchayat_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.String(length=20), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['completed_work_id'], ['nrega_completed_works.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['input_id'], ['input_parameters.id'], ),
    sa.ForeignKeyConstraint(['panchayat_id'], ['nrega_panchayats.id'], ),
    sa.ForeignKeyConstraint(['permissible_work_id'], ['nrega_permissible_works.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('field_data')
    op.drop_table('nrega_completed_works')
    op.drop_table('inputs_and_permissibles')
    op.drop_table('nrega_permissible_works')
    op.drop_table('nrega_panchayats')
    op.drop_table('user_feedbacks')
    op.drop_table('nrega_work_types')
    op.drop_table('nrega_blocks')
    op.drop_table('users')
    op.drop_table('nrega_major_heads')
    op.drop_table('nrega_districts')
    op.drop_table('plant_types')
    op.drop_table('nrega_states')
    op.drop_table('nrega_categories')
    op.drop_table('nrega_beneficiary_types')
    op.drop_table('nrega_activity_types')
    op.drop_table('input_parameters')
    # ### end Alembic commands ###
